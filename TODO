symlinks
--------

Currently, we skip them .. need to find a way to compare them. Following the
links is not an option since that fails if the link is dead (target doesn't
exist anymore). In that case, we still want to be able to compare dirs which
have links. One option would be to treat them as a file with a one-line content
which is the link target's name or a combination of link name and target name
in a string which we can hash, such as

    link -> target

which should be fairly unique. At least that's one deterministic way to treat
links.

get rid of json output
----------------------
The json output is of the "here you go, deal with it" type. Postprocessing with
jq is not really fun. Maybe we should step away from the "we only calculate
hashes" mindset and add simple to use postprocessing for common tasks such as:
only dirs, only files, only multiples, only uniques (the last one requires a
change in main.py to output single-file hashes as well). Instead of puking out
a json, we should store the results in pickled a dict or smth and add
postprocessing sub-commands (similar to what we do in
https://github.com/elcorto/unfish).)

stdout/stderr
-------------
Use logging module.

imports
-------
Use package-local relative imports
